/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.3.v201507280808.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef COMMONAPI_Persistence_Service_STUB_DEFAULT_HPP_
#define COMMONAPI_Persistence_Service_STUB_DEFAULT_HPP_


#include <v1_0/commonapi/PersistenceServiceStub.hpp>
#include <sstream>

namespace v1_0 {
namespace commonapi {

/**
 * Provides a default implementation for PersistenceServiceStubRemoteEvent and
 * PersistenceServiceStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class PersistenceServiceStubDefault
    : public virtual PersistenceServiceStub {
public:
    PersistenceServiceStubDefault();

    PersistenceServiceStubRemoteEvent* initStubAdapter(const std::shared_ptr<PersistenceServiceStubAdapter> &_adapter);

    const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);


    virtual void store(const std::shared_ptr<CommonAPI::ClientId> _client, std::string _key, std::string _value, storeReply_t _reply);
    virtual void load(const std::shared_ptr<CommonAPI::ClientId> _client, std::string _key, loadReply_t _reply);



protected:
    class RemoteEventHandler: public virtual PersistenceServiceStubRemoteEvent {
    public:
        RemoteEventHandler(PersistenceServiceStubDefault *_defaultStub);


    private:
        PersistenceServiceStubDefault *defaultStub_;
    };
private:
    PersistenceServiceStubDefault::RemoteEventHandler remoteEventHandler_;


    CommonAPI::Version interfaceVersion_;
};

} // namespace commonapi
} // namespace v1_0

#endif // COMMONAPI_Persistence_Service_STUB_DEFAULT
